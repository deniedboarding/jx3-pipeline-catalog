apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  name: build-scan-push
spec:
  params:
  - name: env
    type: string
  - name: name
    type: string
  - name: path
    type: string
  - name: feature
    type: string
    default: ""
  - name: maven-options
    type: string
  stepTemplate:
    name: ""
    resources:
      limits: {}
    workingDir: /workspace/source
  steps:
  - image: ghcr.io/jenkins-x/jx-boot:3.10.75
    name: it-variables
    resources: {}
    script: |
      #!/usr/bin/env bash
      cat  << 'end' >> .jx/variables.sh
      # The standard reports bucket url can be fetched with: kubectl get env dev -o go-template='{{range .spec.teamSettings.storageLocations}}{{if eq .classifier "reports"}}{{.bucketUrl}}{{end}}{{end}}'
      BUCKET=reports-test-ticket
      SITEPATH=/issi-ticket/$(params.path)
      STORAGE=s3://${BUCKET}${SITEPATH}
      SITE=http://${BUCKET}.s3-website.eu-north-1.amazonaws.com${SITEPATH}/${BUILD_NUMBER}/
      TEST_RESULT_DIR=issi-ticket-test/target/allure-results
      REPORT_DIR=issi-ticket-test/target/site/allure
      end
  - image: maven:3.8-eclipse-temurin-8
    name: integration-test
    resources: {}
    onError: continue
    env:
    - name: _JAVA_OPTIONS
      value: -XX:+UnlockExperimentalVMOptions -XX:+Dsun
        -UseCGroupMemoryLimitForHeap.zip.disableMemoryMapping=true
        -DLog4jContextSelector=org.apache.logging.log4j.core.selector.ClassLoaderContextSelector
        -Djdk.net.URLClassPath.disableClassPathURLCheck=true -Dmaven.repo.local=/stash/.mvnrepository
    - name: MAVEN_OPTS
      value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
        -Dmaven.wagon.http.retryHandler.count=3 -Duser.timezone=Europe/Stockholm
    - name: TZ
      value: Europe/Stockholm
    volumeMounts:
    - mountPath: /root/.m2/
      name: maven-settings
    script: |
      #!/usr/bin/env sh
      set -ex
      . .jx/variables.sh
      cp /stash/cacerts $JAVA_HOME/jre/lib/security/cacerts

      # FIXME: The whole project needs to be built since the workspace of this task doesn't have the snapshot jars from
      # pullrequest pipeline. So any changes in the dependencies in the project of issi-ticket-test wouldn't be picked up otherwise. It
      # would be nice to somehow stash the snapshot jars from the build pipeline and reuse here. Could be put in S3 bucket with
      # lifecycle configured to expire after 0 Days, which means by midnight, or maybe a bit longer. Maybe using s3-wagon to
      # basically have a maven repo for each pull request. Before deploying new snapshots the old ones should be removed so the tests
      # don't get old snapshots in the case when incremental build stops building a module for the PR.
      # https://github.com/seahen/maven-s3-wagon

      mvn --no-snapshot-updates --no-transfer-progress -Dmaven.test.failure.ignore=false \
          -DjenkinsBuild=${BUILD_NUMBER} -DthreadCount=50 -Dparallel=classes \
          -DparallelTestsTimeoutInSeconds=540 -DreuseForks=true -DquickTest=true \
          -DskipUnitTests=true -Dticket.env=$(params.env) -Dgit.branch=$(params.feature) \
          -Dbrowser=remote $(params.maven-options)
  - image: public.ecr.aws/bitnami/aws-cli:2
    securityContext:
      runAsUser: 0
    name: download-test-history
    resource: {}
    script: |
      #!/bin/bash
      set -ex
      source .jx/variables.sh
      historyDir=${TEST_RESULT_DIR}/history
      mkdir -p $historyDir
      aws s3 cp --recursive --only-show-errors ${STORAGE}/history $historyDir
  - image: klilleby/allure-docker-service:2.20.1-alpine
    name: generate-test-report
    resources: {}
    securityContext:
      runAsUser: 0
    script: |
      #!/bin/bash
      set -ex
      source .jx/variables.sh
      # Set links to previous builds in report. Work around for lack of https://github.com/allure-framework/allure-maven/issues/220
      cat << end >> $TEST_RESULT_DIR/executor.json
      {
        "name": "Jenkins-X",
        "type": "jenkins-x",
        "url": "https://www.ticket.se",
        "buildOrder": $BUILD_NUMBER,
        "buildName": "$(params.name) $BUILD_NUMBER",
        "buildUrl": "$JENKINS_X_URL",
        "reportUrl": "$SITE",
        "reportName": "Preview Integration Tests"
      }
      end
      allure generate $TEST_RESULT_DIR -o $REPORT_DIR
  - image: public.ecr.aws/bitnami/aws-cli:2
    securityContext:
      runAsUser: 0
    name: upload-report
    resource: {}
    script: |
      #!/bin/bash
      set -ex
      source .jx/variables.sh-Dgib.forceBuildModules=issi-ticket-test \
          -Pincremental-build,it verify
      cd $REPORT_DIR
      aws s3 cp --recursive --only-show-errors . ${STORAGE}/${BUILD_NUMBER}
      aws s3 cp --recursive --only-show-errors history ${STORAGE}/history
      cat << end > index.html
      <!DOCTYPE html>
      <html>
      <head>
      <script>
      window.location.replace("$SITE");
      </script>
      </head>
      </html>
      end
      aws s3 cp index.html ${STORAGE}/index.html
  - image: ghcr.io/jenkins-x/jx-boot:3.10.75
    name: add-link
    resources: {}
    script: |
      #!/bin/bash
      set -ex
      source .jx/variables.sh
      if [ -n "$PULL_NUMBER" ]
      then
        jx gitops pr comment -c "Integration test report available at $SITE"
      fi
      # Exit with result from integration test
      # Skipping for now so not every developer need permissions to /override
      # exit `cat $(steps.step-integration-test.exitCode.path)`
  volumes:
  - name: maven-settings
    secret:
      secretName: issi-ticket-maven-settings
